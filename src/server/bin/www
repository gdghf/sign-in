#!/usr/bin/env node
"use strict";

var http = require('http'),
    app = require('../app'),
    mongoose = require('mongoose'),
    config = require('../config'),
    debug = require('debug')('gdghefei:sign-in');

//get port from environment and store in Express.
let port = process.env.PORT || '4000';
app.set('port', port);

//create HTTP server.
var server = http.createServer(app);

mongoose.connect(config.mongodb);

var db = mongoose.connection;

db.on('error', console.error.bind(console, 'connection error:'));
db.once('open', function () {

    server.listen(port);
    server.on('error', (error) => {

        if (error.syscall !== 'listen') throw error;

        var bind = typeof port === 'string' ? 'Pipe:' + port : 'Port:' + port;

        // handle specific listen errors with friendly messages
        switch (error.code) {
            case 'EACCES':

                console.error(bind + ' requires elevated privileges');
                process.exit(1);
                break;

            case 'EADDRINUSE':

                console.error(bind + ' is already in use');
                process.exit(1);
                break;

            default:
                throw error;
        }
    });

    server.on('listening', () => {

        var address = server.address();
        debug('Listening on ' + (typeof address === 'string') ? 'Pipe:' + address : 'Port:' + address.port);
    });
});